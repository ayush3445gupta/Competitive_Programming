#include<bits/stdc++.h>using namespace std;typedef long long ll;void f(ll n,vector<ll>&a){    for(ll i=0;i<n;i++)cin>>a[i];}void solve(){    ll n;    cin>>n;    vector<ll>arr(n);    f(n,arr);    ll k=log2(n);    /*    idea -> start from bottom level pick(2,4,8.....)till k and then do operation, in any contigous block, numbers must be continuous    */    ll cnt=0;    for (ll i = 2; i <=n ; i*=2)    {        // sliding window or 2 pointer        ll l=0,r=0;        ll mx=0,mn=n+1;        bool f=1;        while (r<n)        {            mx=max(mx,arr[r]);            mn=min(mn,arr[r]);            if(r-l+1==i){                if(mx-mn+1==i){                    if(!f){                        sort(arr.begin()+l,arr.begin()+r+1);                        cnt++;                        f=1;                    }                        r++;                        l=r;                        mx=0,mn=n+1;                    }                else{                    cout<<-1<<'\n';                    return;                }            }            else{                if(r+1<n && arr[r]>arr[r+1])f=0;                r++;            }        }            }    cout<<cnt<<'\n';} int main(){ll t;cin>>t;while (t--){    solve();}     return 0;}