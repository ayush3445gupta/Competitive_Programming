#include<bits/stdc++.h>using namespace std;typedef long long ll; void solve(){    ll n;    cin>>n;    vector<vector<ll>>grid(2,vector<ll>(n));    for (ll i = 0; i < 2; i++)       for (ll j = 0; j < n; j++)cin>>grid[i][j];        vector<vector<ll>>prefix(2,vector<ll>(n,0));    for (ll i = 0; i < 2; i++)       for (ll j = 0; j < n; j++){        if(j==0)prefix[i][j]=grid[i][j];        else prefix[i][j]=prefix[i][j-1]+grid[i][j];       }           ll ans=LLONG_MAX;    for (ll i = 0; i < n; i++)    {        // if alice goes down by this column        ll a=prefix[0][n-1]-prefix[0][i];        ll b=0;        if(i!=0)b=prefix[1][i-1];        ans=min(ans,max(a,b));    }    cout<<ans<<'\n';    } int main(){ll t;cin>>t;while (t--){    solve();}     return 0;}