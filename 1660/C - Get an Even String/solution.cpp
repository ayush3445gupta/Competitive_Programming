#include<bits/stdc++.h>using namespace std;typedef long long ll;void solve(){    string s;    cin>>s;    ll m=s.length();    vector<ll>dp(m,-1);    unordered_map<char,ll>last;    for(char c:s)last[c]=-1;    // at every index, we have 2 options , either delete that char or keep that , if we delete that char then ans=dp[i-1]+1 otherwise , it must pair with its earlier matching     for (ll i = 0; i < m; i++)    {        // option 1: delete current character        if(i==0)dp[i]=1;        else dp[i]=dp[i-1]+1;         // option 2 = pair it with its last matchings        if(last[s[i]]!=-1){            ll j=last[s[i]];            if(j==0)dp[i]=min(dp[i],i-j-1);            else dp[i]=min(dp[i],dp[j-1]+i-j-1);        }        last[s[i]]=i;    }    cout<<dp[m-1]<<'\n'; } int main(){ll t;cin>>t;while (t--){    solve();}     return 0;}